[General]
seed-set = 200041227   ####  use your student ID here

cmdenv-express-mode = true
cmdenv-autoflush = true
#**.cmdenv-log-level = info
#debug-on-errors = true
#print-undisposed = true
cmdenv-status-frequency = 5s

network = WiredAndWirelessHostsWithAP
sim-time-limit = 60s 

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

**.scalar-recording = true
# **.vector-recording = true

###### Change output format to sqlite database
# outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
# outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

**.wlan[*].mac.dcf.channelAccess.contention.cwUsed.vector-recording = true

# nic settings
**.bitrate = 2Mbps

**.radio.transmitter.power = 20mW
**.radio.receiver.sensitivity = -85dBm
**.radio.receiver.snirThreshold = 4dB


# Set up the radio medium with BER
**.radioMedium.analogModel.typename = "ScalarAnalogModel"
**.radioMedium.errorModel.typename = "BerErrorModel"
**.radioMedium.backgroundNoise.power = -110dBm

# App settings
**.hasUdp = true

**.*Host*.numApps = 1

#**.sinkNode.udp.typename = "Udp"

**.sinkNode.numApps = 1
**.sinkNode.app[0].typename = "UdpSink"
**.sinkNode.app[0].localPort = 1000


**.*Host[*].app[0].typename = "UdpBasicApp"
**.*Host[*].app[0].destAddresses = "sinkNode"
**.*Host[*].app[*].destPort = 1000

**.*Host[*].app[*].messageLength = 100B
**.*Host[*].app[*].sendInterval = 1s

## These two recording has no impact in this scenario
#**.*Host[*].app[*].rcvdPkLifetime.statistic-recording = true
**.*Host[*].app[*].throughput.statistic-recording = true

**.initialZ = 0m

## MAC: Congestion and contention tuning
**.*Host[*].wlan[*].mac.dcf.channelAccess.pendingQueue.packetCapacity = 100 # default value is 100
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMax = 1023 # default value is 1023
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 15 # default value is 15
**.wlan[*].mac.dcf.recoveryProcedure.shortRetryLimit = 7 # default value is 7
**.wlan[*].mac.dcf.rtsPolicy.rtsThreshold = 2346B # default value is 2346B (meaning rts/cts is disabled for most frame)

#*.visualizer.packetDropVisualizer.displayPacketDrops = true
#*.visualizer.mediumVisualizer.displayCommunicationRanges = true
#*.visualizer.mediumVisualizer.displayInterferenceRanges = true


## These two recording has no impact in this scenario
**.accessPoint*.wlan[*].mac.dcf.packetSentToPeerWithRetry.statistic-recording = true
**.accessPoint*.wlan[*].mac.dcf.packetSentToPeerWithoutRetry.statistic-recording = true


# Default host counts (overridden in configs)
WiredAndWirelessHostsWithAP.num_wireless = 5
WiredAndWirelessHostsWithAP.num_wired = 0


##############################################################
# Task 1

############ Sweep A — Host count sweep (fixed per-host load) ###############
## Keeps per-host traffic constant so offered load scales ≈ linearly with #hosts.
## Good for throughput flattening and PDR drop plots vs offered load.

[Config T1_A_Hosts_5]
description = "Hosts sweep: 5"
WiredAndWirelessHostsWithAP.num_wireless = 5
**.*Host[*].app[*].messageLength = 1000B
**.*Host[*].app[*].sendInterval = 0.1s

[Config T1_A_Hosts_10]
extends = T1_A_Hosts_5
description = "Hosts sweep: 10"
WiredAndWirelessHostsWithAP.num_wireless = 10

[Config T1_A_Hosts_15]
extends = T1_A_Hosts_5
description = "Hosts sweep: 15"
WiredAndWirelessHostsWithAP.num_wireless = 15

[Config T1_A_Hosts_20]
extends = T1_A_Hosts_5
description = "Hosts sweep: 20"
WiredAndWirelessHostsWithAP.num_wireless = 20

[Config T1_A_Hosts_25]
extends = T1_A_Hosts_5
description = "Hosts sweep: 25"
WiredAndWirelessHostsWithAP.num_wireless = 25

[Config T1_A_Hosts_30]
extends = T1_A_Hosts_5
description = "Hosts sweep: 30"
WiredAndWirelessHostsWithAP.num_wireless = 30

[Config T1_A_Hosts_40]
extends = T1_A_Hosts_5
description = "Hosts sweep: 40"
WiredAndWirelessHostsWithAP.num_wireless = 40

[Config T1_A_Hosts_50]
extends = T1_A_Hosts_5
description = "Hosts sweep: 50"
WiredAndWirelessHostsWithAP.num_wireless = 50

############## Sweep B — Per-host load sweep (fixed host count = 20) #################
# Keeps contention set constant; ramps per-node traffic.
# Great for delay spike and retransmission vs load plots.

[Config T1_B_Load_1s]
description = "Load sweep (20 hosts): sendInterval=1s"
WiredAndWirelessHostsWithAP.num_wireless = 20
**.*Host[*].app[*].messageLength = 1000B
**.*Host[*].app[*].sendInterval = 1s

[Config T1_B_Load_0p5s]
extends = T1_B_Load_1s
description = "Load sweep: 0.5s"
**.*Host[*].app[*].sendInterval = 0.5s

[Config T1_B_Load_0p2s]
extends = T1_B_Load_1s
description = "Load sweep: 0.2s"
**.*Host[*].app[*].sendInterval = 0.2s

[Config T1_B_Load_0p1s]
extends = T1_B_Load_1s
description = "Load sweep: 0.1s"
**.*Host[*].app[*].sendInterval = 0.1s

[Config T1_B_Load_0p05s]
extends = T1_B_Load_1s
description = "Load sweep: 0.05s"
**.*Host[*].app[*].sendInterval = 0.05s

[Config T1_B_Load_0p02s]
extends = T1_B_Load_1s
description = "Load sweep: 0.02s"
**.*Host[*].app[*].sendInterval = 0.02s

[Config T1_B_Load_0p01s]
extends = T1_B_Load_1s
description = "Load sweep: 0.01s"
**.*Host[*].app[*].sendInterval = 0.01s


################### Sweep C — DCF contention sweep (fixed load = 20 hosts @ 1000B/0.05s) ######################
# Show how cwMin shapes collisions/backoff/delay at the same offered load.

[Config T1_C_cwMin_7]
description = "DCF sweep (20 hosts, heavy load) cwMin=7"
WiredAndWirelessHostsWithAP.num_wireless = 20
**.*Host[*].app[*].messageLength = 1000B
**.*Host[*].app[*].sendInterval = 0.05s
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 7

[Config T1_C_cwMin_15]
extends = T1_C_cwMin_7
description = "cwMin=15"
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 15

[Config T1_C_cwMin_31]
extends = T1_C_cwMin_7
description = "cwMin=31"
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 31

[Config T1_C_cwMin_63]
extends = T1_C_cwMin_7
description = "cwMin=63"
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 63

[Config T1_C_cwMin_127]
extends = T1_C_cwMin_7
description = "cwMin=127"
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 127


##################################################################################

##############################################################
# Task 2
########### Host Count Sweep (fixed high load per host)  ############
# Keep messageLength = 1000B, sendInterval = 0.01s (very aggressive) ###################
[Config T2_A_Hosts10]
WiredAndWirelessHostsWithAP.num_wireless = 10
**.*Host[*].app[*].messageLength = 1000B
**.*Host[*].app[*].sendInterval = 0.01s

[Config T2_A_Hosts20]
extends = T2_A_Hosts10
WiredAndWirelessHostsWithAP.num_wireless = 20

[Config T2_A_Hosts50]
extends = T2_A_Hosts10
WiredAndWirelessHostsWithAP.num_wireless = 50

[Config T2_A_Hosts100]
extends = T2_A_Hosts10
WiredAndWirelessHostsWithAP.num_wireless = 100

############### Traffic Intensity Sweep (fixed host count = 20) ######################
# Flood the channel gradually by reducing sendInterval:

[Config T2_B_Load_0p1s]
WiredAndWirelessHostsWithAP.num_wireless = 20
**.*Host[*].app[*].messageLength = 1000B
**.*Host[*].app[*].sendInterval = 0.1s

[Config T2_B_Load_0p05s]
extends = T2_B_Load_0p1s
**.*Host[*].app[*].sendInterval = 0.05s

[Config T2_B_Load_0p02s]
extends = T2_B_Load_0p1s
**.*Host[*].app[*].sendInterval = 0.02s

[Config T2_B_Load_0p01s]
extends = T2_B_Load_0p1s
**.*Host[*].app[*].sendInterval = 0.01s

############ DCF Aggressiveness Sweep (contention tuning) ##############
# Fix host count = 50, very high load, vary CWmin:

[Config T2_C_CW7]
WiredAndWirelessHostsWithAP.num_wireless = 50
**.*Host[*].app[*].messageLength = 1000B
**.*Host[*].app[*].sendInterval = 0.01s
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 7

[Config T2_C_CW15]
extends = T2_C_CW7
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 15

[Config T2_C_CW31]
extends = T2_C_CW7
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 31

[Config T2_C_CW63]
extends = T2_C_CW7
**.*Host[*].wlan[*].mac.dcf.channelAccess.cwMin = 63

#######################################################################################
# Task 3

sim-time-limit = 30s 

##################################################################################

########## Task 3 — Baseline (constant traffic settings for all Task 3 runs) ##########
[Config T3_Baseline]
description = "Baseline: 20 hosts, constant traffic, BER model enabled"
WiredAndWirelessHostsWithAP.num_wireless = 20
**.*Host[*].app[*].messageLength = 1000B
**.*Host[*].app[*].sendInterval = 0.05s

# Use BER error model (baseline)
**.radioMedium.analogModel.typename = "ScalarAnalogModel"
**.radioMedium.errorModel.typename = "BerErrorModel"
**.radioMedium.backgroundNoise.power = -110dBm   # baseline noise
**.radio.transmitter.power = 20mW                # baseline tx power
**.radio.receiver.sensitivity = -85dBm           # baseline sensitivity
**.radio.receiver.snirThreshold = 4dB            # baseline SNIR threshold

**.scalar-recording = true
**.vector-recording = true
**.wlan[*].mac.dcf.channelAccess.contention.cwUsed.vector-recording = true


######################## Sweep A ################################

# Increase background noise (worse interference)
[Config T3_A_Noise_neg110]
extends = T3_Baseline
description = "Noise sweep: -110 dBm (quiet)"
**.radioMedium.backgroundNoise.power = -110dBm

[Config T3_A_Noise_neg100]
extends = T3_Baseline
description = "Noise sweep: -100 dBm (light interference)"
**.radioMedium.backgroundNoise.power = -100dBm

[Config T3_A_Noise_neg95]
extends = T3_Baseline
description = "Noise sweep: -95 dBm (moderate interference)"
**.radioMedium.backgroundNoise.power = -95dBm

[Config T3_A_Noise_neg90]
extends = T3_Baseline
description = "Noise sweep: -90 dBm (strong interference)"
**.radioMedium.backgroundNoise.power = -90dBm

[Config T3_A_Noise_neg85]
extends = T3_Baseline
description = "Noise sweep: -85 dBm (very strong interference)"
**.radioMedium.backgroundNoise.power = -85dBm
################################################################################

######################## Sweep B — Transmit Power #########################
# Change transmit power to see range/coverage effects (weaker tx -> more packet errors)
[Config T3_B_TxP_20mW]
extends = T3_Baseline
description = "Tx power 20mW (baseline)"
**.radio.transmitter.power = 20mW

[Config T3_B_TxP_10mW]
extends = T3_Baseline
description = "Tx power 10mW"
**.radio.transmitter.power = 10mW

[Config T3_B_TxP_1mW]
extends = T3_Baseline
description = "Tx power 1mW"
**.radio.transmitter.power = 1mW

[Config T3_B_TxP_0p1mW]
extends = T3_Baseline
description = "Tx power 0.1mW"
**.radio.transmitter.power = 0.1mW

[Config T3_B_TxP_0p01mW]
extends = T3_Baseline
description = "Tx power 0.01mW (very weak)"
**.radio.transmitter.power = 0.01mW
################################################################################

######################## Sweep 3 — Receiver Sensitivity ####################
# Make receiver more/less sensitive (higher sensitivity = lower (more negative) dBm threshold)
[Config T3_C_Sens_neg90]
extends = T3_Baseline
description = "Receiver sensitivity -90 dBm (more tolerant)"
**.radio.receiver.sensitivity = -90dBm

[Config T3_C_Sens_neg85]
extends = T3_Baseline
description = "Receiver sensitivity -85 dBm (baseline)"
**.radio.receiver.sensitivity = -85dBm

[Config T3_C_Sens_neg80]
extends = T3_Baseline
description = "Receiver sensitivity -80 dBm (less tolerant)"
**.radio.receiver.sensitivity = -80dBm

[Config T3_C_Sens_neg75]
extends = T3_Baseline
description = "Receiver sensitivity -75 dBm (poor receiver)"
**.radio.receiver.sensitivity = -75dBm
################################################################################

######################## Sweep 4 — SNIR Threshold ##########################
# Require higher SNIR to successfully decode -> mimics stricter modulation/coding or receiver loss
[Config T3_D_Snir_0dB]
extends = T3_Baseline
description = "SNIR threshold = 0 dB (lenient)"
**.radio.receiver.snirThreshold = 0dB

[Config T3_D_Snir_4dB]
extends = T3_Baseline
description = "SNIR threshold = 4 dB (baseline)"
**.radio.receiver.snirThreshold = 4dB

[Config T3_D_Snir_8dB]
extends = T3_Baseline
description = "SNIR threshold = 8 dB (stricter)"
**.radio.receiver.snirThreshold = 8dB

[Config T3_D_Snir_12dB]
extends = T3_Baseline
description = "SNIR threshold = 12 dB (very strict)"
**.radio.receiver.snirThreshold = 12dB
################################################################################

######################## Sweep 5 — Combined Interference Scenarios ################
# Combine worse noise + weak tx to create severe interference (useful to find critical thresholds)
[Config T3_E_Severe1]
extends = T3_Baseline
description = "Severe: noise -90dBm + tx 0.1mW + snir 8dB"
**.radioMedium.backgroundNoise.power = -90dBm
**.radio.transmitter.power = 0.1mW
**.radio.receiver.snirThreshold = 8dB

[Config T3_E_Severe2]
extends = T3_Baseline
description = "Severe: noise -85dBm + tx 0.01mW + snir 12dB"
**.radioMedium.backgroundNoise.power = -85dBm
**.radio.transmitter.power = 0.01mW
**.radio.receiver.snirThreshold = 12dB
################################################################################

# Task 4

sim-time-limit = 30s 

################################################################################
[Config T4_WirelessSaturation]
description = "Wireless Segment Saturation"

# Use only wireless hosts
WiredAndWirelessHostsWithAP.num_wireless = 20
WiredAndWirelessHostsWithAP.num_wired = 0

# Applications
**.*Host[*].app[0].typename = "UdpBasicApp"
**.*Host[*].app[0].destAddresses = "sinkNode"
**.*Host[*].app[0].destPort = 1000
**.*Host[*].app[0].messageLength = 1024B
**.*Host[*].app[0].sendInterval = 0.001s   # 1ms

**.sinkNode.app[0].typename = "UdpSink"
**.sinkNode.app[0].localPort = 1000

# Wireless MAC/PHY
**.wlan[*].bitrate = 54Mbps
**.wlan[*].mac.dcf.channelAccess.cwMin = 15
**.wlan[*].mac.dcf.channelAccess.cwMax = 1023

[Config T4_WiredSaturation]
description = "Wired Segment Saturation"

# Use only wired hosts
WiredAndWirelessHostsWithAP.num_wireless = 0
WiredAndWirelessHostsWithAP.num_wired = 20

# Applications
**.*Host[*].app[0].typename = "UdpBasicApp"
**.*Host[*].app[0].destAddresses = "sinkNode"
**.*Host[*].app[0].destPort = 1000
**.*Host[*].app[0].messageLength = 1024B
**.*Host[*].app[0].sendInterval = 0.001s   # same as wireless

**.sinkNode.app[0].typename = "UdpSink"
**.sinkNode.app[0].localPort = 1000

# Wired channel
**.wiredHost[*].ethg.datarate = 100Mbps
**.router.ethg[*].datarate = 100Mbps
**.accessPoint.ethg[*].datarate = 100Mbps
**.sinkNode.ethg[*].datarate = 100Mbps


####################### Sweep B #############################

[Config T4_WirelessSaturation_LowLoad]
extends = T4_WirelessSaturation
description = "Wireless Saturation -10% load"
**.*Host[*].app[0].sendInterval = 0.0011s

[Config T4_WirelessSaturation_HighLoad]
extends = T4_WirelessSaturation
description = "Wireless Saturation +10% load"
**.*Host[*].app[0].sendInterval = 0.0009s

[Config T4_WiredSaturation_LowLoad]
extends = T4_WiredSaturation
description = "Wired Saturation -10% load"
**.*Host[*].app[0].sendInterval = 0.0011s

[Config T4_WiredSaturation_HighLoad]
extends = T4_WiredSaturation
description = "Wired Saturation +10% load"
**.*Host[*].app[0].sendInterval = 0.0009s




